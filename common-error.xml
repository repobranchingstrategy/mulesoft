<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core" 
  xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

  <context:property-placeholder order="10" location="classpath:hertz-mule-error-type.properties,classpath:hertz-mule-error-desc.properties"
    ignore-unresolvable="true" ignore-resource-not-found="true" />
 
	<spring:beans>
		<spring:import resource="classpath:api-common-error.xml" />
		<spring:import resource="classpath:messaging-common-error.xml" />
		<spring:import resource="classpath:auditing-framework.xml" />
	</spring:beans>

	<flow name="build-response-SubFlow">
		<set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
    <set-variable variableName="commonError"
      value="#[org.mule.util.ExceptionUtils.getRootCauseMessage(exception)]" doc:name="exceptionMessage" />
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  ErrorDetails: {
    Error: {
      Code: outboundProperties.errorCode,
      Type: outboundProperties.errorType,
      Message: outboundProperties.errorDesc ++ ' : ' ++ flowVars.commonError
    }
  }
}]]></dw:set-payload>
		</dw:transform-message>

    <byte-array-to-object-transformer doc:name="Byte Array to Object"/>
    
		<async doc:name="Async">		
			<flow-ref name="auditLoggingFramework" doc:name="auditLoggingFramework" />
		</async>
	</flow>
	
	<!-- this flow expects the calling flow to set the flowVars.commonError text -->
  <flow name="build-custom-response-SubFlow">
    <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
   
    <dw:transform-message doc:name="Transform Message">
      <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  ErrorDetails: {
    Error: {
      Code: outboundProperties.errorCode,
      Type: outboundProperties.errorType,
      Message: outboundProperties.errorDesc ++ ' : ' ++ flowVars.commonError
    }
  }
}]]></dw:set-payload>
    </dw:transform-message>
    
    <byte-array-to-object-transformer doc:name="Byte Array to Object"/>
    <async doc:name="Async">    
      <flow-ref name="auditLoggingFramework" doc:name="auditLoggingFramework" />
    </async>
  </flow>
  
  <!-- 
    this flow is a reusable dataweave lookup flow for when the payload is not null but the attributes that are used to build the 
    restFul response are. This results in an empty json being sent back to the client while a 404 error message should be sent.
  -->
  <flow name="dataweave404LookupFlow">
    <set-property propertyName="http.status" value="404" doc:name="Set Http Status" />
    <set-property propertyName="errorCode" value="404" doc:name="Set errorCode" />
    <set-property propertyName="errorType" value="${com.hertz.mule.internal.error.type.http.404}" doc:name="Set errorType" />
    <set-property propertyName="errorDesc" value="${com.hertz.mule.internal.error.desc.http.404}" doc:name="Set errorCode" />
    <set-variable variableName="commonError" value="#['Payload empty - No data retrieved']" doc:name="exceptionMessage" />
    <flow-ref name="build-custom-response-SubFlow" doc:name="build-response-SubFlow" />
  </flow>
  
</mule>
